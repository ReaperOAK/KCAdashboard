name: Generate a build and push to another branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper branch handling
          ref: main       # Explicitly checkout main branch

      # Configure Git to handle divergent branches with merge strategy
      - name: Configure Git
        run: |
          git config --global pull.rebase false
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Check if build branch exists and delete it if needed
      - name: Remove existing build branch if exists
        run: |
          git fetch origin
          if git ls-remote --exit-code --heads origin build; then
            echo "Remote build branch exists but we'll create a fresh one"
          fi

      - name: Install dependencies (excluding problematic packages)
        run: |
          # Create .npmrc to ignore specific packages
          echo "lichess-pgn-viewer@*:*: --no-save" > .npmrc
          echo "snabbdom@*:*: --no-save" >> .npmrc
          npm install

      - name: Copy fixed packages
        run: |
          # Copy pre-fixed packages to node_modules
          mkdir -p node_modules/lichess-pgn-viewer
          mkdir -p node_modules/snabbdom
          cp -r fixed-packages/lichess-pgn-viewer/* node_modules/lichess-pgn-viewer/
          cp -r fixed-packages/snabbdom/* node_modules/snabbdom/

      - name: Build React app
        run: npm run build

      - name: Copy API files
        run: |
          mkdir -p build/api
          cp -r api/* build/api/
          cp .htaccess build/

      - name: Push (creating new build branch)
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: build
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          SQUASH_HISTORY: true       # Squash all history to prevent issues
          MESSAGE: "Build: ({sha}) {msg}"